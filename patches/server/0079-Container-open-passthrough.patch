From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Mon, 17 Jul 2023 11:41:50 +0800
Subject: [PATCH] Container open passthrough


diff --git a/src/main/java/net/minecraft/world/level/block/SignBlock.java b/src/main/java/net/minecraft/world/level/block/SignBlock.java
index ade170b4c76ad4a36eb2fba831d438642c096205..872f50bdf238ff6cf3d327b3858323a84fcb777d 100644
--- a/src/main/java/net/minecraft/world/level/block/SignBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/SignBlock.java
@@ -117,6 +117,25 @@ public abstract class SignBlock extends BaseEntityBlock implements SimpleWaterlo
                     return InteractionResult.SUCCESS;
                 } else if (flag2) {
                     return InteractionResult.SUCCESS;
+                    // Leaves start - signContainerPassthrough
+                } else if (top.leavesmc.leaves.LeavesConfig.containerPassthrough) {
+                    if (item == net.minecraft.world.item.Items.AIR && player.isShiftKeyDown()) {
+                        if (!this.otherPlayerIsEditingSign(player, tileentitysign) && player.mayBuild() && this.hasEditableText(player, tileentitysign, flag1)) {
+                            this.openTextEdit(player, tileentitysign, flag1);
+                            return InteractionResult.SUCCESS;
+                        }
+                    }
+
+                    BlockPos pos1 = pos.relative(hit.getDirection().getOpposite());
+                    if (this instanceof WallSignBlock || this instanceof WallHangingSignBlock) {
+                        pos1 = pos.relative(state.getValue(HorizontalDirectionalBlock.FACING).getOpposite());
+                    }
+                    if (world.getBlockEntity(pos1) instanceof net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity) {
+                        BlockState state1 = world.getBlockState(pos1);
+                        return state1.use(world, player, hand, hit.withPosition(pos1));
+                    }
+                    return InteractionResult.PASS;
+                    // Leaves end - signContainerPassthrough
                 } else if (!this.otherPlayerIsEditingSign(player, tileentitysign) && player.mayBuild() && this.hasEditableText(player, tileentitysign, flag1)) {
                     this.openTextEdit(player, tileentitysign, flag1, io.papermc.paper.event.player.PlayerOpenSignEvent.Cause.INTERACT); // Paper
                     return this.getInteractionResult(flag);
