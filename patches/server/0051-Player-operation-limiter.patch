From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Sun, 11 Dec 2022 18:43:35 +0800
Subject: [PATCH] Player operation limiter

This patch is Powered by plusls-carpet-addition(https://github.com/plusls/plusls-carpet-addition)

diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 2bdd75f4e48a232d2cc7c24475caafa2ebd989b0..fb3f205ca2d462e492ca74218a69c5b9923dfdbb 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -269,6 +269,10 @@ public class ServerPlayer extends Player {
     public final com.destroystokyo.paper.util.misc.PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<ServerPlayer> cachedSingleHashSet; // Paper
     public PlayerNaturallySpawnCreaturesEvent playerNaturallySpawnedEvent; // Paper
     public org.bukkit.event.player.PlayerQuitEvent.QuitReason quitReason = null; // Paper - there are a lot of changes to do if we change all methods leading to the event
+    // Leaves start - player operation limiter
+    private int instaBreakCountPerTick = 0;
+    private int placeBlockCountPerTick = 0;
+    // Leaves end - player operation limiter
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
@@ -661,6 +665,7 @@ public class ServerPlayer extends Player {
             this.joining = false;
         }
         // CraftBukkit end
+        this.resetOperationCountPerTick(); // Leaves - player operation limiter
         this.gameMode.tick();
         this.wardenSpawnTracker.tick();
         --this.spawnInvulnerableTime;
@@ -2555,5 +2560,32 @@ public class ServerPlayer extends Player {
     public CraftPlayer getBukkitEntity() {
         return (CraftPlayer) super.getBukkitEntity();
     }
+
+    // Leaves start - player operation limiter
+    private void resetOperationCountPerTick() {
+        instaBreakCountPerTick = 0;
+        placeBlockCountPerTick = 0;
+    }
+
+    public int getInstaBreakCountPerTick() {
+        return instaBreakCountPerTick;
+    }
+
+    public int getPlaceBlockCountPerTick() {
+        return placeBlockCountPerTick;
+    }
+
+    public void addInstaBreakCountPerTick() {
+        ++instaBreakCountPerTick;
+    }
+
+    public void addPlaceBlockCountPerTick() {
+        ++placeBlockCountPerTick;
+    }
+
+    public boolean allowOperation() {
+        return (instaBreakCountPerTick == 0 || placeBlockCountPerTick == 0) && (instaBreakCountPerTick <= 1 && placeBlockCountPerTick <= 2);
+    }
+    // Leaves end - player operation limiter
     // CraftBukkit end
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java b/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
index 58b093bb1de78ee3b3b2ea364aa50474883f443a..a59cf7c1a34ee54b3a64047498ce4e090648df86 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
@@ -44,6 +44,7 @@ import org.bukkit.event.Event;
 import org.bukkit.event.block.Action;
 import org.bukkit.event.player.PlayerGameModeChangeEvent;
 import org.bukkit.event.player.PlayerInteractEvent;
+import top.leavesmc.leaves.event.player.PlayerOperationLimitEvent;
 // CraftBukkit end
 
 public class ServerPlayerGameMode {
@@ -325,6 +326,19 @@ public class ServerPlayerGameMode {
     }
 
     public void destroyAndAck(BlockPos pos, int sequence, String reason) {
+        // Leaves start - player operation limiter
+        if (top.leavesmc.leaves.LeavesConfig.playerOperationLimiter) {
+            if (reason.equals("insta mine")) {
+                player.addInstaBreakCountPerTick();
+                if (!player.allowOperation()) {
+                    MinecraftServer.getServer().server.getPluginManager().callEvent(new PlayerOperationLimitEvent(player.getBukkitEntity(), PlayerOperationLimitEvent.Operation.MINE, CraftBlock.at(level, pos)));
+                    this.player.connection.send(new ClientboundBlockUpdatePacket(pos, this.level.getBlockState(pos)));
+                    this.debugLogging(pos, false, sequence, reason);
+                    return;
+                }
+            }
+        }
+        // Leaves end - player operation limiter
         if (this.destroyBlock(pos)) {
             this.debugLogging(pos, true, sequence, reason);
         } else {
diff --git a/src/main/java/net/minecraft/world/item/BlockItem.java b/src/main/java/net/minecraft/world/item/BlockItem.java
index 3ab714721b51b039291b8e8a4b4da5118e18f5b7..1ee9c431282851882cdc337ea01ee59067163903 100644
--- a/src/main/java/net/minecraft/world/item/BlockItem.java
+++ b/src/main/java/net/minecraft/world/item/BlockItem.java
@@ -32,9 +32,12 @@ import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.Property;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.shapes.CollisionContext;
+import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.block.CraftBlockState;
 import org.bukkit.craftbukkit.block.data.CraftBlockData;
 import org.bukkit.event.block.BlockCanBuildEvent;
+import top.leavesmc.leaves.event.player.PlayerOperationLimitEvent;
 // CraftBukkit end
 
 public class BlockItem extends Item {
@@ -83,6 +86,20 @@ public class BlockItem extends Item {
                 final org.bukkit.block.BlockState oldBlockstate = blockstate != null ? blockstate : org.bukkit.craftbukkit.block.CraftBlockStates.getBlockState(blockactioncontext1.getLevel(), blockactioncontext1.getClickedPos()); // Paper
                 // CraftBukkit end
 
+                // Leaves start - player operation limiter
+                if (top.leavesmc.leaves.LeavesConfig.playerOperationLimiter && !context.getLevel().isClientSide()) {
+                    ServerPlayer player = (ServerPlayer) context.getPlayer();
+                    if (player != null && iblockdata != null) {
+                        player.addPlaceBlockCountPerTick();
+                        if (!player.allowOperation()) {
+                            if (blockstate != null) {
+                                MinecraftServer.getServer().server.getPluginManager().callEvent(new PlayerOperationLimitEvent(player.getBukkitEntity(), PlayerOperationLimitEvent.Operation.PLACE, blockstate.getBlock()));
+                            }
+                            return InteractionResult.FAIL;
+                        }
+                    }
+                }
+                // Leaves end - player operation limiter
                 if (iblockdata == null) {
                     return InteractionResult.FAIL;
                 } else if (!this.placeBlock(blockactioncontext1, iblockdata)) {
diff --git a/src/main/java/top/leavesmc/leaves/LeavesConfig.java b/src/main/java/top/leavesmc/leaves/LeavesConfig.java
index bd8a724d0085adb6336339a7aba8a376c01b277e..4a922f5fe4eb884c4f9bbdb089b942b6af051c02 100644
--- a/src/main/java/top/leavesmc/leaves/LeavesConfig.java
+++ b/src/main/java/top/leavesmc/leaves/LeavesConfig.java
@@ -430,6 +430,11 @@ public final class LeavesConfig {
         }
     }
 
+    public static boolean playerOperationLimiter = false;
+    private static void playerOperationLimiter() {
+        playerOperationLimiter = getBoolean("settings.modify.player-operation-limiter", playerOperationLimiter);
+    }
+
     public static final class WorldConfig {
 
         public final String worldName;
